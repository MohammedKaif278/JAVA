Index: Collections/src/List/ArrayList/ArrayList1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collections/src/List/ArrayList/ArrayList1.java b/Collections/src/List/ArrayList/ArrayList1.java
new file mode 100644
--- /dev/null	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
+++ b/Collections/src/List/ArrayList/ArrayList1.java	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
@@ -0,0 +1,54 @@
+package List.ArrayList;
+
+import java.sql.SQLOutput;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.LinkedList;
+import java.util.List;
+
+public class ArrayList1 {
+    public static void main(String[] args) {
+
+//        Difference of using List or ArrayList at reference point
+
+//        1)By using ArrayList as refference point:-
+
+//        ArrayList<Integer> list = new ArrayList<>();
+//        LinkedList<Integer> list2=new LinkedList<>();
+//
+//        list.add(1);
+//        list2=list;
+
+//        System.out.println(list2);
+//
+//        2)By using List as refference point:-
+
+//        List<Integer> list3 = new ArrayList<>();
+//        List<Integer> list4 = new LinkedList<>();
+//
+//        list3.add(1);
+//        list4=list3;
+//
+//        System.out.println(list4);
+
+
+//        2 ways of Adding element in ArrayList
+//    1)
+        ArrayList<String> list = new ArrayList<>();
+        list.add("apple");
+        list.add("orange");
+        list.add("mango");
+        list.add("pear");
+
+        list.addFirst("graphes");
+
+//    2)
+//      ArrayList<String> list2 = new ArrayList<>(Arrays.asList("apple", "orange", "mango", "pear"));
+        System.out.println("First Element:"+list.get(0));
+        for (String fruit : list)
+        {
+        System.out.println(fruit);
+
+        }
+    }
+}
Index: Collections/src/List/LinkedList/LinkedList1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collections/src/List/LinkedList/LinkedList1.java b/Collections/src/List/LinkedList/LinkedList1.java
new file mode 100644
--- /dev/null	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
+++ b/Collections/src/List/LinkedList/LinkedList1.java	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
@@ -0,0 +1,52 @@
+package List.LinkedList;
+
+import java.util.Arrays;
+import java.util.LinkedList;
+
+public class LinkedList1 {
+    public static void main(String[] args) {
+
+//        Difference of using List or LinkedList at reference point
+
+//        1)By using LinkedList as refference point:-
+
+//        ArrayList<Integer> list = new ArrayList<>();
+//        LinkedList<Integer> list2=new LinkedList<>();
+//
+//        list.add(1);
+//        list2=list;
+
+//        System.out.println(list2);
+
+//        2)By using List as refference point:-
+
+//        List<Integer> list3 = new ArrayList<>();
+//        List<Integer> list4 = new LinkedList<>();
+//
+//        list3.add(1);
+//        list4=list3;
+//
+//        System.out.println(list4);
+
+
+//        2 ways of Adding element in ArrayList
+//    1)
+        LinkedList<String> list=new LinkedList();
+        list.add("Apple");
+        list.add("Banana");
+        list.add("mango");
+        list.add("kiwi");
+
+        list.addFirst("orange");
+        list.addLast("pear");
+
+//    2)
+//        LinkedList<String> list = new LinkedList<>(Arrays.asList("Apple","Banana","mango","kiwi"));
+        System.out.println("Original list : "+list);
+        System.out.println("Last Element : "+list.getLast());
+        for (String fruit:list)
+        {
+            System.out.println(fruit);
+        }
+    }
+}
Index: Collections/src/List/Vector/Stack/Stack1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collections/src/List/Vector/Stack/Stack1.java b/Collections/src/List/Vector/Stack/Stack1.java
new file mode 100644
--- /dev/null	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
+++ b/Collections/src/List/Vector/Stack/Stack1.java	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
@@ -0,0 +1,53 @@
+package List.Vector.Stack;
+
+import java.util.Arrays;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Stack;
+
+public class Stack1 {
+    public static void main(String[] args) {
+
+        //        Difference of using List or LinkedList at reference point
+
+//        1)By using Stack as refference point:-
+
+//        Stack<Integer> s = new Stack<>();
+//        LinkedList<Integer> list2=new LinkedList<>();
+//
+//        s.add(1);
+//        list2=s;
+//
+//        System.out.println(list2);
+
+//        2)By using List as refference point:-
+
+//        List<Integer> s = new Stack<>();
+//        List<Integer> list4 = new LinkedList<>();
+//
+//        s.add(1);
+//        list4=s;
+//
+//        System.out.println(list4);
+
+
+//        2 ways of Adding element in ArrayList
+//    1)
+        Stack<String> s = new Stack<>();
+        s.push("apple");
+        s.push("orange");
+        s.push("pear");
+        s.push("mango");
+
+//   2)
+//        Stack<Integer> s=new Stack<>();
+//        s.addAll(Arrays.asList(1,2,3,4));
+
+        System.out.println(s.peek());
+        System.out.println(s);
+    while(!s.isEmpty())
+    {
+        System.out.println(s.pop());
+    }
+    }
+}
Index: Collections/src/List/Vector/Vector1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collections/src/List/Vector/Vector1.java b/Collections/src/List/Vector/Vector1.java
new file mode 100644
--- /dev/null	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
+++ b/Collections/src/List/Vector/Vector1.java	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
@@ -0,0 +1,54 @@
+package List.Vector;
+
+import java.util.Arrays;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Vector;
+
+public class Vector1 {
+    public static void main(String[] args) {
+
+//        Difference of using List or vector at reference point
+
+//        1)By using LinkedList as refference point:-
+
+//        Vector<Integer> v = new Vector<>();
+//        LinkedList<Integer> list2=new LinkedList<>();
+//
+//        v.add(1);
+//        list2=v;
+//
+//        System.out.println(list2);
+
+
+//        2)By using List as refference point:-
+
+//        List<Integer> v1 = new Vector<>();
+//        List<Integer> list4 = new LinkedList<>();
+//
+//        v1.add(1);
+//        list4=v1;
+//
+//        System.out.println(list4);
+
+
+//        2 ways of Adding element in ArrayList
+//    1)
+        Vector<Integer> v = new Vector<>();
+        v.add(1);
+        v.add(2);
+        v.add(3);
+        v.add(4);
+        v.add(5);
+
+//    2)
+//        Vector<Integer> v = new Vector<>(Arrays.asList(1,3,4,5));
+        System.out.println("original list :"+v);
+        System.out.println("Last element : "+v.get(2));
+        for(Integer i : v)
+        {
+            System.out.println(i);
+        }
+
+    }
+}
Index: Collections/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collections/.gitignore b/Collections/.gitignore
--- a/Collections/.gitignore	(revision 00e3b99cb5af61f9dfad7954ab090360dafdb9f1)
+++ b/Collections/.gitignore	(revision 3024edef61af178d546286f02ca0c6613cd050c8)
@@ -1,5 +1,4 @@
-*
-!/src
-!/pom.xml
+/*
+!/src/
 !/README.md
-!.gitignore
\ No newline at end of file
+!/LICENSE
\ No newline at end of file
